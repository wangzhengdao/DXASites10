<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sdl.Web.Tridion</name>
    </assembly>
    <members>
        <member name="T:Sdl.Web.Tridion.ApiClient.GlobalClaimManager">
            <summary>
            Handles adding and automatically removing global claims. This class is used so you can
            execute client Api methods with claims and once you finish the global claims can be 
            automatically removed allowing usage of the same client without the global claims being
            forwarded
            
            <example>
                var client = ApiClientFactory.Instance.CreateClient()
                using(var mgr = GlobalClaimManager.Create)
                {
                    mgr.AddClaim(myClaim)
                    client.Execute(...)
                }
                // client.Execute will not pass myClaim
            </example>
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.ApiClient.Logger">
            <summary>
            Log implementation used by the PCA client just forwards on logging to be handled by the DXA
            log implementation that can be switched through Unity if required.
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.ApiClient.OAuth">
            <summary>
            OAuth provider
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.OAuth.ApplyManualAuthentication(Sdl.Tridion.Api.Http.Client.Request.IHttpClientRequest)">
            <summary>
            Add OAuth headers to http request.
            <remarks>
            The CIL TokenProvider implementation handles aquiring/refreshing tokens from the
            token service so we can be sure that on call to this our OAuth token is valid.
            </remarks>
            </summary>
            <param name="request">Http Request</param>
        </member>
        <member name="T:Sdl.Web.Tridion.ApiClient.ApiClientFactory">
            <summary>
            Api Client Factory creates clients with context claim forwarding and
            OAuthentication for using the GraphQL Api.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.AddGlobalClaim(Sdl.Tridion.Api.Client.ContentModel.ClaimValue)">
            <summary>
            Add a global claim to send to client
            </summary>
            <param name="claim">Claim to send</param>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.RemoveGlobalClaim(Sdl.Tridion.Api.Client.ContentModel.ClaimValue)">
            <summary>
            Remove global claim from client
            </summary>
            <param name="claim">Claim to remove</param>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.CreateSearchClient``2">
            <summary>
            Returns a fully constructed IQ Search client
            </summary>
            <typeparam name="TSearchResultSet">Type used for result set</typeparam>
            <typeparam name="TSearchResult">Type ised for result</typeparam>
            <returns>IQ Search Client</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.CreateSearchClient``2(System.String)">
            <summary>
            Returns a fully constructed IQ Search client
            </summary>
            <typeparam name="TSearchResultSet">Type used for result set</typeparam>
            <typeparam name="TSearchResult">Type ised for result</typeparam>
            <param name="searchIndex">Search Index</param>
            <returns>IQ Search Client</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.CreateSearchClient``2(System.Uri,System.String)">
            <summary>
            Returns a fully constructed IQ Search client
            </summary>
            <typeparam name="TSearchResultSet">Type used for result set</typeparam>
            <typeparam name="TSearchResult">Type ised for result</typeparam>
            <param name="endpoint">IQ Search endpoint</param>
            <param name="searchIndex">Search Index</param>
            <returns></returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ApiClient.ApiClientFactory.CreateClient">
            <summary>
            Return a fully constructed Public Content Api client
            </summary>
            <returns>Public Content Api Client</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder">
            <summary>
            Model Builder used to convert <see cref="T:Sdl.Web.Common.Models.GenericTopic"/> Entity Models to Strongly Typed Topic Models.
            </summary>
            <remarks>
            This class has two use cases:
            <list type="bullet">
                <item>It can act as an Entity Model Builder which is configured in the <see cref="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline"/>.</item>
                <item>It can be used directly to convert a given <see cref="T:Sdl.Web.Common.Models.GenericTopic"/>. See <see cref="M:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder.TryConvertToStronglyTypedTopic``1(Sdl.Web.Common.Models.GenericTopic)"/>.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder.BuildEntityModel(Sdl.Web.Common.Models.EntityModel@,Sdl.Web.DataModel.EntityModelData,System.Type,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Builds a strongly typed Entity Model based on a given DXA R2 Data Model.
            </summary>
            <param name="entityModel">The strongly typed Entity Model to build. Is <c>null</c> for the first Entity Model Builder in the pipeline.</param>
            <param name="entityModelData">The DXA R2 Data Model.</param>
            <param name="baseModelType">The base type for the Entity Model to build.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder.TryConvertToStronglyTypedTopic(Sdl.Web.Common.Models.GenericTopic,System.Type)">
            <summary>
            Tries to convert a given generic Topic to a Strongly Typed Topic Model.
            </summary>
            <param name="genericTopic">The generic Topic to convert.</param>
            <param name="ofType">The type of the Strongly Typed Topic Model to convert to. If not specified (or <c>null</c>), the type will be determined from the XHTML.</param>
            <returns>The Strongly Typed Topic Model or <c>null</c> if the generic Topic cannot be converted.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder.TryConvertToStronglyTypedTopic``1(Sdl.Web.Common.Models.GenericTopic)">
            <summary>
            Tries to convert a given generic Topic to a Strongly Typed Topic Model.
            </summary>
            <param name="genericTopic">The generic Topic to convert.</param>
            <typeparam name="T">The type of the Strongly Typed Topic Model to convert to.</typeparam>
            <returns>The Strongly Typed Topic Model or <c>null</c> if the generic Topic cannot be converted to the given type.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.StronglyTypedTopicBuilder.FilterXPathResults(System.Xml.XmlNodeList,System.String)">
            <summary>
            Filters the XHTML elements found by the XPath query.
            </summary>
            <remarks>
            Because we use "contains" in the XPath, it may match on part of a class name.
            We filter out any partial matches here.
            </remarks>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.GraphQLContentProvider">
            <summary>
            GraphQL Content Provider implementation (based on Public Content Api).
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.GraphQLContentProvider.PopulateDynamicList(Sdl.Web.Common.Models.DynamicList,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Populates a Dynamic List by executing the query it specifies.
            </summary>
            <param name="dynamicList">The Dynamic List which specifies the query and is to be populated.</param>
            <param name="localization">The context Localization.</param>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.DefaultModelBuilder">
            <summary>
            Default Page and Entity Model Builder implementation (based on DXA R2 Data Model).
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultModelBuilder.BuildPageModel(Sdl.Web.Common.Models.PageModel@,Sdl.Web.DataModel.PageModelData,System.Boolean,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Builds a strongly typed Page Model from a given DXA R2 Data Model.
            </summary>
            <param name="pageModel">The strongly typed Page Model to build. Is <c>null</c> for the first Page Model Builder in the pipeline.</param>
            <param name="pageModelData">The DXA R2 Data Model.</param>
            <param name="includePageRegions">Indicates whether Include Page Regions should be included.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultModelBuilder.BuildEntityModel(Sdl.Web.Common.Models.EntityModel@,Sdl.Web.DataModel.EntityModelData,System.Type,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Builds a strongly typed Entity Model based on a given DXA R2 Data Model.
            </summary>
            <param name="entityModel">The strongly typed Entity Model to build. Is <c>null</c> for the first Entity Model Builder in the pipeline.</param>
            <param name="entityModelData">The DXA R2 Data Model.</param>
            <param name="baseModelType">The base type for the Entity Model to build.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.IModelBuilder">
            <summary>
            Interface for (DD4T-based) Model builders (advanced extension point).
            </summary>
            <remarks>
            Although an interface with a same name existed in STRI 1.0, this interface is not compatible.
            Preferably, this extension point should not be used in implementations, because it is DD4T specific and will change in DXA 2.0.
            It is kept in DXA 1.1 for advanced (SDL-owned) modules like the Smart Target module.
            </remarks>
            <seealso cref="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline"/>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.IRawDataProvider">
            <summary>
            Interface used by <see cref="T:Sdl.Web.Tridion.Navigation.StaticNavigationProvider"/> to access Navigation.json
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.IEntityModelBuilder">
            <summary>
            Interface for Entity Model Builders based on the DXA R2 Data Model.
            </summary>
            <seealso cref="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline"/>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.IEntityModelBuilder.BuildEntityModel(Sdl.Web.Common.Models.EntityModel@,Sdl.Web.DataModel.EntityModelData,System.Type,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Builds a strongly typed Entity Model based on a given DXA R2 Data Model.
            </summary>
            <param name="entityModel">The strongly typed Entity Model to build. Is <c>null</c> for the first Entity Model Builder in the pipeline.</param>
            <param name="entityModelData">The DXA R2 Data Model.</param>
            <param name="baseModelType">The base type for the Entity Model to build.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.IPageModelBuilder">
            <summary>
            Interface for Page Model Builders based on teh DXA R2 Data Model.
            </summary>
            <seealso cref="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline"/>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.IPageModelBuilder.BuildPageModel(Sdl.Web.Common.Models.PageModel@,Sdl.Web.DataModel.PageModelData,System.Boolean,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Builds a strongly typed Page Model from a given DXA R2 Data Model.
            </summary>
            <param name="pageModel">The strongly typed Page Model to build. Is <c>null</c> for the first Page Model Builder in the pipeline.</param>
            <param name="pageModelData">The DXA R2 Data Model.</param>
            <param name="includePageRegions">Indicates whether Include Page Regions should be included.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline">
            <summary>
            Represents a pipeline/chain of configured Strongly Typed View Model Builders (based on DXA R2 Data Model).
            </summary>
            <remarks>
            Each Model Builder in the pipeline is invoked and has the possibility to modify the resulting Page/Entity Model.
            The first Model Builder has to construct the View Models (it will get in <c>null</c>).
            Normally, the <see cref="T:Sdl.Web.Tridion.Mapping.DefaultModelBuilder"/> will be the first and only one.
            </remarks>
            <seealso cref="T:Sdl.Web.Tridion.Mapping.IPageModelBuilder"/>
            <seealso cref="T:Sdl.Web.Tridion.Mapping.IEntityModelBuilder"/>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline.#cctor">
            <summary>
            Initializes the Model Builder Pipeline (class constructor).
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline.CreatePageModel(Sdl.Web.DataModel.PageModelData,System.Boolean,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Creates a Strongly Typed Page Model for a given DXA R2 Data Model.
            </summary>
            <param name="pageModelData">The DXA R2 Data Model.</param>
            <param name="includePageRegions">Indicates whether Include Page Regions should be included.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
            <returns>The Strongly Typed Page Model (an instance of class <see cref="T:Sdl.Web.Common.Models.PageModel"/> or a subclass).</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline.CreateEntityModel(Sdl.Web.DataModel.EntityModelData,System.Type,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Creates a Strongly Typed Entity Model for a given DXA R2 Data Model.
            </summary>
            <param name="entityModelData">The DXA R2 Data Model.</param>
            <param name="baseModelType">The base type for the Entity Model to build.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
            <returns>The strongly typed Entity Model. Will be of type <paramref name="baseModelType"/> or a subclass.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Mapping.DefaultContentProvider">
            <summary>
            Default Content Provider implementation (based on DXA R2 Data Model).
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.GetPageModel(System.String,Sdl.Web.Common.Configuration.Localization,System.Boolean)">
            <summary>
            Gets a Page Model for a given URL path.
            </summary>
            <param name="urlPath">The URL path (unescaped).</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
            <param name="addIncludes">Indicates whether include Pages should be expanded.</param>
            <returns>The Page Model.</returns>
            <exception cref="T:Sdl.Web.Common.DxaItemNotFoundException">If no Page Model exists for the given URL.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.GetPageModel(System.Int32,Sdl.Web.Common.Configuration.Localization,System.Boolean)">
            <summary>
            Gets a Page Model for a given Page Id.
            </summary>
            <param name="pageId">Page Id</param>
            <param name="localization">The context Localization.</param>
            <param name="addIncludes">Indicates whether include Pages should be expanded.</param>
            <returns>The Page Model.</returns>
            <exception cref="T:Sdl.Web.Common.DxaItemNotFoundException">If no Page Model exists for the given Id.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.GetEntityModel(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets an Entity Model for a given Entity Identifier.
            </summary>
            <param name="id">The Entity Identifier. Must be in format {ComponentID}-{TemplateID}.</param>
            <param name="localization">The context Localization.</param>
            <returns>The Entity Model.</returns>
            <exception cref="T:Sdl.Web.Common.DxaItemNotFoundException">If no Entity Model exists for the given URL.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.GetStaticContentItem(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets a Static Content Item for a given URL path.
            </summary>
            <param name="urlPath">The URL path (unescaped).</param>
            <param name="localization">The context Localization.</param>
            <returns>The Static Content Item.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.GetStaticContentItem(System.Int32,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets a Static Content Item for a given Id.
            </summary>
            <param name="binaryId">The Id of the binary.</param>
            <param name="localization">The context Localization.</param>
            <returns>The Static Content Item.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Mapping.DefaultContentProvider.PopulateDynamicList(Sdl.Web.Common.Models.DynamicList,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Populates a Dynamic List by executing the query it specifies.
            </summary>
            <param name="dynamicList">The Dynamic List which specifies the query and is to be populated.</param>
            <param name="localization">The context Localization.</param>
        </member>
        <member name="T:Sdl.Web.Tridion.Caching.DxaCacheProvider">
            <summary>
            Cache Provider implementation to forward requests to CIL caching
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Caching.KeylockCacheProvider">
            <summary>
            Key lock cache provider wraps CIL cache access with lock syncronisation.
            
            1. Prevents multiple threads doing the same heavy lifting:
                Lock syncronisation is used so only the first thread to take the lock will generate the cache value. All 
                subsequent threads will block until the first thread completes.
               
            2. Prevents each thread from getting deadlocked by its own locks (re-entrant caching):
                The API provided by the ICacheProvider allows clients to pass a lamda function for calculating the
                cache value. A potential issue with this mechanism is the lamda function could try to retrieve a value
                from the cache that uses the same cache key (even a different key that has a hash collision may cause 
                this). This can result in a deadlock. We resolve this issue by dealing with re-entrant lamda functions 
                using a thread local atomic counter. When a lock is taken the lock object used is created based on the cache 
                key and also this local atomic counter. 
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Caching.CacheProvider">
            <summary>
            Abstract base class for DXA Cache Providers providing a lock-free thread safe wrapper.
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Caching.DD4TCacheProvider">
            <summary>
            Cache Provider implementation to forward requests to DD4T ICacheAgents
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Caching.DefaultCacheProvider">
            <summary>
            Default Cache Provider implementation based on CIL caching.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Caching.DefaultCacheProvider.Store``1(System.String,System.String,``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Stores a given key/value pair to a given cache Region.
            </summary>
            <param name="key">The key.</param>
            <param name="region">The name of the cache region. Different cache regions can have different retention policies.</param>
            <param name="value">The value. If <c>null</c>, this effectively removes the key from the cache.</param>
            <param name="dependencies">An optional set of dependent item IDs. Can be used to invalidate the cached item.</param>
            <typeparam name="T">The type of the value to add.</typeparam>
        </member>
        <member name="M:Sdl.Web.Tridion.Caching.DefaultCacheProvider.TryGet``1(System.String,System.String,``0@)">
            <summary>
            Tries to get a cached value for a given key and cache region.
            </summary>
            <param name="key">The key.</param>
            <param name="region">The name of the cache region. Different cache regions can have different retention policies.</param>
            <param name="value">The cached value (output).</param>
            <typeparam name="T">The type of the value to get.</typeparam>
            <returns><c>true</c> if a cached value was found for the given key and cache region.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Caching.DefaultCacheProvider.GetOrAdd``1(System.String,System.String,System.Func{``0},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Tries to get a cached value for a given key and cache region adding a new value if it didn't already exist.
            </summary>
            <typeparam name="T">The type of the value to get.</typeparam>
            <param name="key">The key.</param>
            <param name="region">The name of the cache region. Different cache regions can have different retention policies.</param>
            <param name="addFunction">Add function.</param>
            <param name="dependencies">An optional set of dependent item IDs. Can be used to invalidate the cached item.</param>
            <returns>Value to cache.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Providers.Binary.CILBinaryProvider">
            <summary>
            Binary Provider
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Providers.Binary.GraphQLBinaryProvider">
            <summary>
            Binary Provider
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Providers.Query.BrokerQueryProvider.SetKeywordFilters(System.Collections.Generic.List{System.String})">
            <summary>
            Sets the keyword filters using a list of keyword uri strings
            </summary>
            <param name="keywordUris"></param>
        </member>
        <member name="M:Sdl.Web.Tridion.Providers.Query.BrokerQueryProvider.SetKeywordFilters(System.Collections.Generic.List{Tridion.ContentDelivery.Taxonomies.Keyword})">
            <summary>
            Sets the keyword filters using a list of keyword objects
            </summary>
            <param name="keywords"></param>
        </member>
        <member name="M:Sdl.Web.Tridion.Providers.Query.BrokerQueryProvider.LoadKeywords(System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of keyword objects based on their URIs
            </summary>
            <param name="keywordUris"></param>
            <returns></returns>
        </member>
        <member name="T:Sdl.Web.Tridion.GraphQLMashupLocalizationResolver">
            <summary>
            Localization Resolver to match against both Docs and Sites urls.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.GraphQLMashupLocalizationResolver.ResolveLocalization(System.Uri)">
            <summary>
            Resolves a matching <see cref="!:ILocalization"/> for a given URL.
            </summary>
            <param name="url">The URL to resolve.</param>
            <returns>A <see cref="!:ILocalization"/> instance which base URL matches that of the given URL.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="T:Sdl.Web.Tridion.ContentManager.CmUri">
            <summary>
            Handles CmUris (that can be of any namespace such as tcm or ish)
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.ContentManager.InvalidTcmUriException">
            <summary>
            The exception that is thrown for conversion of invalid <see cref="T:System.String"/> to <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
            <remarks>
            This Exception is thrown : 
            <list type="bullet">
            <item> while instantiating a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> using  an invalid <see cref="T:System.String"/> representation, if explicitly mentioned. </item>
            <item> while deserializing an invalid <see cref="T:System.String"/> representation of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> to <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>. </item>
            </list>
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.InvalidTcmUriException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidTcmUriException class with a predefined error message.
            </summary>
            <param name="uri">
            The string representation of a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </param>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.InvalidTcmUriException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidTcmUriException class with a predefined error message and inner exception.
            </summary>
            <param name="uri">
            The string representation of a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <c>innerException</c> parameter is not a <c>null</c> reference, the current exception is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="T:Sdl.Web.Tridion.ContentManager.ItemTypes">
            <summary>
            Defines ConstantsCommon for system defined item types.
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.ContentManager.ItemType">
            <summary>
            Specifies the Content Manager item types.
            </summary>
            <remarks>
            This enumeration defines both the symbolic names and numeric values for all TCM item types.
            The numeric values are used in TCM URIs.
            Note that the numeric values look like bit flags, but they are not really: 
            repository-local, system-wide and workflow item types have overlapping bit values.
            Therefore, performing bitwise ORs or ANDs is dangerous; it can only be done for item types of
            the same "class" (repository-local, system-wide or workflow).
            </remarks>
        </member>
        <member name="T:Sdl.Web.Tridion.ContentManager.TcmUri">
            <summary>
            Represents a native Tridion Content Manager URI which uniquely identifies a resource in the system.
            </summary>
            <remarks>The structure of a TCM URI is <c>PublicationID-ItemID[-ItemType][-vVersion]</c>.</remarks>
        </member>
        <member name="F:Sdl.Web.Tridion.ContentManager.TcmUri._tcmUriRegEx">
            <summary>
             RegEx with a pattern of a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>, which has a structure of 
             <c>{PublicationID-ItemID}[-ItemType][-vVersion]</c>
            </summary>
            <remarks>
            Explanation of the optional <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.ItemType"/> group: (-(?&lt;itemType&gt;[0-9]+))?
            <list type="bullet">
              <item>- : start with a '-'</item>
              <item>?&lt;nameOfTheGroup&gt; : give the group defined by '()' a name, which can be used to retrieve it.</item>
              <item>[0-9] : any decimal digit</item>
              <item>+  : there must be one or more of the preceding item (the decimal digit)</item>
              <item>?  : there must be zero or more of the preceding item (here the group defined by '()'</item>
            </list>
            </remarks>
        </member>
        <member name="F:Sdl.Web.Tridion.ContentManager.TcmUri.SystemRepositoryUri">
            <summary>
            A <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> identifying the system Repository.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.#ctor">
            <summary>
            Initializes a new instance of the TcmUri class representing tcm:0-0-0.
            </summary>
            <remarks>
            This is a private constructor. Use the static <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull"/> property instead.
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.#ctor(System.Int32,Sdl.Web.Tridion.ContentManager.ItemType)">
            <summary>
            Initializes a new instance of the TcmUri class with the specified itemID and itemType.
            </summary>
            <param name="itemId">The unique identifier for the item.</param>
            <param name="itemType">The type of item.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>itemId</c> is negative. This behavior has changed in version 3.0.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.#ctor(System.Int32,Sdl.Web.Tridion.ContentManager.ItemType,System.Int32)">
            <summary>
            Initializes a new instance of the TcmUri class with the specified <paramref name="itemId"/>, <paramref name="itemType"/> and <paramref name="publicationId"/>.
            </summary>
            <param name="itemId">The unique identifier for the item.</param>
            <param name="itemType">The type of item.</param>
            <param name="publicationId">The unique identifier for the publication.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>itemId</c> is negative, or <c>publicationId</c> is negative and not -1. This behavior has changed in version 3.0.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.#ctor(System.Int32,Sdl.Web.Tridion.ContentManager.ItemType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TcmUri class with the specified <paramref name="itemId"/>, <paramref name="itemType"/>,
            <paramref name="publicationId"/> and <paramref name="version"/>.
            </summary>
            <param name="itemId">The unique identifier for the item.</param>
            <param name="itemType">The type of item.</param>
            <param name="publicationId">The unique identifier for the publication.</param>
            <param name="version">The version number.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>itemId</c> is negative, or <c>publicationId</c> is negative and not -1. This behavior has changed in version 3.0.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TcmUri class with the itemID, itemType, publicationID, and version extracted from the URI.
            </summary>
            <param name="uri">The URI containing the itemID, itemType, publicationID, and version.</param>
            <exception cref="T:Sdl.Web.Tridion.ContentManager.InvalidTcmUriException">
                Thrown if <paramref name="uri"/> is an invalid <see cref="T:System.String"/> representation of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>. This behavior has changed in version 3.0.
            </exception>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull">
            <summary>
            Gets a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance that represents a URI <see langword="null"/> (tcm:0-0-0).
            </summary>
            <value>
            A <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance that represents a URI <see langword="null"/> (tcm:0-0-0).
            </value>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.ItemId">
            <summary>
            Gets the Item ID of the item represented by this instance of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
            <value>
            Either a non-negative ID or <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> when item ID is not specified.
            </value>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.ItemType">
            <summary>
            Gets the Item Type of the item represented by this instance of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.PublicationId">
            <summary>
            Gets the Publication ID of the item represented by this instance of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
            <value>
            Either a non-negative publication ID or <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> when publication ID is not specified.
            </value>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.Version">
            <summary>
            Gets the version of the item represented by this instance of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
            <value>
            Either a non-negative version number or <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> when version is not specified.
            </value>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.ContextRepositoryId">
            <summary>
            Gets the id of the context Repository
            </summary>
            <value>
            The identifier of the context Repository.
            0 if the context Repository Id is <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/>.
            </value>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsEditableVersion">
            <summary>
            Gets a value indicating whether it is the editable version.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsSystemWide">
            <summary>
            Gets a value indicating whether it identifies a System Wide object.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsRepositoryLocal">
            <summary>
            Gets a value indicating whether it identifies a Repository local object.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsVersionless">
            <summary>
            Gets a value indicating whether it contains a version.
            </summary>
            <returns><c>true</c> if it contains a version otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsSystemRepository">
            <summary>
            Gets a value indicating whether it is the System Repository.
            </summary>
            <returns><c>true</c> if it is a System Repository otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Sdl.Web.Tridion.ContentManager.TcmUri.IsUriNull">
            <summary>
            Gets a value indicating whether it is <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull"/>.
            </summary>
            <returns><c>true</c> if the <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> is <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull"/>, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.GetContextRepositoryId(System.Boolean)">
            <summary>
            Gets a value indicating the Repository.
            </summary>
            <param name="expectSystemRepository">In case the PublicationID is null then return the expectedSystemRepository or null.</param>
            <returns>
            The identifier of the context Repository.
            0 if the context Repository Id is <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> and expecting the System Repository.
            <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> if the context Repository is <see cref="F:Sdl.Web.Tridion.ContentManager.TcmUri._idNull"/> and not expecting the system Repository.
            </returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.GetContextRepositoryUri">
            <summary>
            Gets a value indicating the Repository.
            </summary>
            <returns>A <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> containing the Repository.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.GetVersionlessUri">
            <summary>
            Gets a value indicating a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> without a version.
            </summary>
            <returns>A <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> without a version</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.IsNullOrUriNull(Sdl.Web.Tridion.ContentManager.TcmUri)">
            <summary>
            Gets a value indicating whether it is <c>null</c> or <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull"/>.
            </summary>
            <param name="id">The <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> to check.</param>
            <returns><c>true</c> if the <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> is <c>null</c> or <see cref="P:Sdl.Web.Tridion.ContentManager.TcmUri.UriNull"/> otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.IsValid(System.String)">
            <summary>
            Returns whether the given value is valid for this type.
            </summary>
            <param name="uri">The <see cref="T:System.String"/> to test for validity.</param>
            <returns><see langword="true"/> if the specified value is valid for this object; otherwise, <see langword="false"/>.</returns>
            <remarks>This property is <see langword="true"/> if the string that was passed into the method 
            can be parsed as a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance, which has a structure of 
            <c>{PublicationID-ItemID}[-ItemType][-vVersion]</c>. Otherwise, the property is <see langword="false"/>.
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/></returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> is equal to the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.  
            </summary>
            <param name="obj">The <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> to compare with the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> is equal to the current <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.Equals(System.Object,System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instances are considered equal.
            </summary>
            <param name="objA">The first <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> to compare.</param>
            <param name="objB">>The second <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> to compare.</param>
            <returns><see langword="true"/> if <paramref name="objA"/> is the same instance as <paramref name="objB"/> or if both are <see langword="null"/> 
            references or if <c>objA.Equals(objB)</c> returns <see langword="true"/>; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.op_Implicit(Sdl.Web.Tridion.ContentManager.TcmUri)~System.String">
            <summary>
            Supports (implicit) cast to string.
            </summary>
            <param name="source">The <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> object to cast to a string.</param>
            <returns>
            A string representation of the TCM URI. See <see cref="M:Sdl.Web.Tridion.ContentManager.TcmUri.ToString"/>.
            Returns <see langword="null"/> if <paramref name="source"/> is <see langword="null"/>.</returns>
            <remarks>
            <example><code>
            TcmUri myTcmUri = new TcmUri("tcm:1-2")
            string uri = myTcmUri;
            </code></example>
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.op_Equality(Sdl.Web.Tridion.ContentManager.TcmUri,Sdl.Web.Tridion.ContentManager.TcmUri)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instances are considered equal (equality operator overload).
            </summary>
            <param name="objA">The first instance to compare.</param>
            <param name="objB">The second instance to compare.</param>
            <returns><see langword="true"/> if both instances represent the same TCM URI.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.op_Inequality(Sdl.Web.Tridion.ContentManager.TcmUri,Sdl.Web.Tridion.ContentManager.TcmUri)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instances are considered different (inequality operator overload).
            </summary>
            <param name="objA">The first instance to compare.</param>
            <param name="objB">The second instance to compare.</param>
            <returns><see langword="false"/> if both instances represent the same TCM URI.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.op_Equality(Sdl.Web.Tridion.ContentManager.TcmUri,System.String)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance and string are considered equal (equality operator overload).
            </summary>
            <param name="objA">The <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance to compare.</param>
            <param name="objB">The string to compare against.</param>
            <returns><see langword="true"/> if the <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance represent the same TCM URI as the string.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.op_Inequality(Sdl.Web.Tridion.ContentManager.TcmUri,System.String)">
            <summary>
            Determines whether the specified <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance and string are considered different (inequality operator overload).
            </summary>
            <param name="objA">The <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance to compare.</param>
            <param name="objB">The string to compare against.</param>
            <returns><see langword="false"/> if the <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> instance represent the same TCM URI as the string.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.IsNull(System.Object)">
            <summary>
            Helper method to check whether an object is <see langword="null"/>, without the influence
            of operator overloading.
            </summary>
            <param name="obj">The object to check for being <see langword="null"/></param>
            <returns><c>obj==null</c></returns>
        </member>
        <member name="M:Sdl.Web.Tridion.ContentManager.TcmUri.Parse(System.String)">
            <summary>
            Converts a string that represents a TCM URI into an actual <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/> type.
            </summary>
            <param name="uri">The string representation of a <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.</param>
            <exception cref="T:Sdl.Web.Tridion.ContentManager.InvalidTcmUriException">
                Thrown if <paramref name="uri"/> is an invalid <see cref="T:System.String"/> representation of <see cref="T:Sdl.Web.Tridion.ContentManager.TcmUri"/>.
            </exception>
        </member>
        <member name="T:Sdl.Web.Tridion.Context.ContextServiceClaimsProvider">
            <summary>
            DXA Context Claims Provider using the SDL Web 8 CDaaS Context Service.
            </summary>
            <remarks>
            This class is excluded in the Release_71 configuration.
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.Context.ContextServiceClaimsProvider.#cctor">
            <summary>
            Class constructor
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.Context.ContextServiceClaimsProvider.DefaultUserAgent">
            <summary>
            Default User Agent used in case no User-Agent HTTP header is found (mainly used for testing purposes).
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Context.ContextServiceClaimsProvider.GetContextClaims(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets the context claims. Either all context claims or for a given aspect name.
            </summary>
            <param name="aspectName">The aspect name. If <c>null</c> all context claims are returned.</param>
            <param name="localization">The context Localization.</param>
            <returns>A dictionary with the claim names in format aspectName.propertyName as keys.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Context.ContextServiceClaimsProvider.GetDeviceFamily">
            <summary>
            Gets the device family (an aggregated device claim determined from other context claims).
            </summary>
            <returns>A string representing the device family.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Context.AdfContextClaimsProvider.GetContextClaims(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets the context claims. Either all context claims or for a given aspect name.
            </summary>
            <param name="aspectName">The aspect name. If <c>null</c> all context claims are returned.</param>
            <param name="localization">The context Localization.</param>
            <returns>A dictionary with the claim names in format aspectName.propertyName as keys.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Context.AdfContextClaimsProvider.GetDeviceFamily">
            <summary>
            Gets the device family (an aggregated device claim determined from other context claims).
            </summary>
            <returns>A string representing the device family.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Linking.GraphQLLinkResolver">
            <summary>
            Default Link Resolver implementation
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Linking.GraphQLLinkResolver.ResolveLink(System.String,System.Boolean,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Resolves a link URI (TCM URI or site URL) to a normalized site URL.
            </summary>
            <param name="sourceUri">The source URI (TCM URI or site URL)</param>
            <param name="resolveToBinary">Specifies whether a link to a Multimedia Component should be resolved directly to its Binary (<c>true</c>) or as a regular Component link.</param>
            <param name="localization">The context Localization (optional, since the TCM URI already contains a Publication ID, but this allows resolving in a different context).</param>
            <returns>The resolved URL.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Linking.DefaultLinkResolver">
            <summary>
            Default Link Resolver implementation
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Linking.DefaultLinkResolver.ResolveLink(System.String,System.Boolean,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Resolves a link URI (TCM URI or site URL) to a normalized site URL.
            </summary>
            <param name="sourceUri">The source URI (TCM URI or site URL)</param>
            <param name="resolveToBinary">Specifies whether a link to a Multimedia Component should be resolved directly to its Binary (<c>true</c>) or as a regular Component link.</param>
            <param name="localization">The context Localization (optional, since the TCM URI already contains a Publication ID, but this allows resolving in a different context).</param>
            <returns>The resolved URL.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.CdApiLocalizationResolver">
            <summary>
            Localization Resolver that uses the CDaaS API to do the URL to Publication mapping.
            </summary>
            <remarks>
            This class is excluded in the Release_7.1 configuration.
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.CdApiLocalizationResolver.#ctor">
            <summary>
            Initializes a new <see cref="T:Sdl.Web.Tridion.CdApiLocalizationResolver"/> instance.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.CdApiLocalizationResolver.ResolveLocalization(System.Uri)">
            <summary>
            Resolves a matching <see cref="!:ILocalization"/> for a given URL.
            </summary>
            <param name="url">The URL to resolve.</param>
            <returns>A <see cref="!:ILocalization"/> instance which base URL matches that of the given URL.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="T:Sdl.Web.Tridion.CdConfigLocalizationResolver">
            <summary>
            Localization Resolver that reads the URL to Publication mapping from cd_dynamic_conf.xml
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.CdConfigLocalizationResolver.#ctor">
            <summary>
            Initializes a new <see cref="T:Sdl.Web.Tridion.CdConfigLocalizationResolver"/> instance.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.CdConfigLocalizationResolver.ResolveLocalization(System.Uri)">
            <summary>
            Resolves a matching <see cref="!:ILocalization"/> for a given URL.
            </summary>
            <param name="url">The URL to resolve.</param>
            <returns>A <see cref="!:ILocalization"/> instance which base URL matches that of the given URL.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="T:Sdl.Web.Tridion.Configuration.ModelBuilderCollection">
            <summary>
            Represents a collection of configured Model Builders.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Configuration.ModelBuilderCollection.Add(Sdl.Web.Tridion.Configuration.ModelBuilderSettings)">
            <summary>
            Adds an element to the collection.
            </summary>
            <param name="modelBuilderSettings">The element to add.</param>
        </member>
        <member name="M:Sdl.Web.Tridion.Configuration.ModelBuilderCollection.Remove(Sdl.Web.Tridion.Configuration.ModelBuilderSettings)">
            <summary>
            Removes an element from the collection.
            </summary>
            <param name="modelBuilderSettings">The element to remove.</param>
        </member>
        <member name="P:Sdl.Web.Tridion.Configuration.ModelBuilderCollection.CollectionType">
            <summary>
            Gets the type of collection: add/remove/clear map.
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Configuration.ModelBuilderPipelineConfiguration">
            <summary>
            Represents the configuration section for <see cref="T:Sdl.Web.Tridion.Mapping.ModelBuilderPipeline"/> configuration.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.Configuration.ModelBuilderPipelineConfiguration.ModelBuilders">
            <summary>
            Gets or sets the collection of configured Model Builders.
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Configuration.ModelBuilderSettings">
            <summary>
            Represents the configuration settings for a Model Builder.
            </summary>
        </member>
        <member name="P:Sdl.Web.Tridion.Configuration.ModelBuilderSettings.Type">
            <summary>
            Gets or set the (assembly qualified) type name of the Model Builder.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.GraphQLLocalizationResolver.ResolveLocalization(System.Uri)">
            <summary>
            Resolves a matching <see cref="!:ILocalization"/> for a given URL.
            </summary>
            <param name="url">The URL to resolve.</param>
            <returns>A <see cref="!:ILocalization"/> instance which base URL matches that of the given URL.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="T:Sdl.Web.Tridion.LocalizationResolver">
            <summary>
            Abstract base class for Localization Resolvers.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.LocalizationResolver.ResolveLocalization(System.Uri)">
            <summary>
            Resolves a matching <see cref="!:ILocalization"/> for a given URL.
            </summary>
            <param name="url">The URL to resolve.</param>
            <returns>A <see cref="!:ILocalization"/> instance which base URL matches that of the given URL.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="M:Sdl.Web.Tridion.LocalizationResolver.GetLocalization(System.String)">
            <summary>
            Gets a <see cref="!:ILocalization"/> by its identifier.
            </summary>
            <param name="localizationId">The Localization identifier.</param>
            <returns>A <see cref="!:ILocalization"/> instance with the given identifier.</returns>
            <exception cref="T:Sdl.Web.Common.DxaUnknownLocalizationException">If no matching Localization can be found.</exception>
        </member>
        <member name="T:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider">
            <summary>
            Model Service Provider uses the DXA model service to request page, entity and navigation data objects
            that are used to build data model objects using the data model builder pipeline.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.AddDataModelExtension(Sdl.Web.Common.Interfaces.IDataModelExtension)">
            <summary>
            Adds a new data model extension to handle deserialization.
            </summary>
            <param name="extension">Extension.</param>      
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.GetPageModelData(System.String,Sdl.Web.Common.Configuration.Localization,System.Boolean)">
            <summary>
            Get page model data object.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.GetEntityModelData(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Get entity model data object.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.GetSitemapItem(Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Get site map item.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.NullifyEmptyUrl(Sdl.Web.Common.Models.SitemapItem)">
            <summary>
            Convert empty URL into a null value for the given <see cref="T:Sdl.Web.Common.Models.SitemapItem"/> and its decendants.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.DefaultModelServiceProvider.GetChildSitemapItems(System.String,Sdl.Web.Common.Configuration.Localization,System.Boolean,System.Int32)">
            <summary>
            Get child site map items.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.ModelService.GraphQLModelServiceProvider.GetChildSitemapItemsInternal(System.String,Sdl.Web.Common.Configuration.Localization,System.Boolean,System.Int32)">
            <summary>
            Replicate the behavior of the CIL implementation when it comes to requesting items rooted at
            a point with a specific depth level + include ancestors
            </summary>
        </member>
        <member name="T:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider">
            <summary>
            Navigation Provider implementation based on Taxonomies (Categories and Keywords)
            This implementation uses the model service to construct the sitemap items.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider.GetNavigationModel(Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets the Navigation Model (Sitemap) for a given Localization.
            </summary>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Model (Sitemap root Item).</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider.GetTopNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the top navigation menu for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider.GetContextNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the context navigation panel for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider.GetBreadcrumbNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the breadcrumb trail for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.DynamicNavigationProvider.GetNavigationSubtree(System.String,Sdl.Web.Common.Models.Navigation.NavigationFilter,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets a Navigation subtree for the given Sitemap Item.
            </summary>
            <param name="sitemapItemId">The context <see cref="T:Sdl.Web.Common.Models.SitemapItem"/> identifier. Can be <c>null</c>.</param>
            <param name="filter">The <see cref="T:Sdl.Web.Common.Models.Navigation.NavigationFilter"/> used to specify which information to put in the subtree.</param>
            <param name="localization">The context <see cref="!:ILocalization"/>.</param>
            <returns>A set of Sitemap Items representing the requested subtree.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Navigation.StaticNavigationProvider">
            <summary>
            Navigation Provider implementation based on statically generated (published) Navigation.json
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.StaticNavigationProvider.GetNavigationModel(Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets the Navigation Model (Sitemap) for a given Localization.
            </summary>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Model (Sitemap root Item).</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.StaticNavigationProvider.GetTopNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the top navigation menu for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.StaticNavigationProvider.GetContextNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the context navigation panel for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Navigation.StaticNavigationProvider.GetBreadcrumbNavigationLinks(System.String,Sdl.Web.Common.Configuration.Localization)">
            <summary>
            Gets Navigation Links for the breadcrumb trail for the given request URL path.
            </summary>
            <param name="requestUrlPath">The request URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The Navigation Links.</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Statics.BinaryFileManager">
            <summary>
            Ensures a Binary file is cached on the file-system from the Tridion Broker DB
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.BinaryFileManager.Dimensions.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="P:Sdl.Web.Tridion.Statics.BinaryFileManager.Instance">
            <summary>
            Gets the singleton BinaryFileManager instance.
            </summary>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.BinaryFileManager.GetCachedFile(System.String,Sdl.Web.Common.Configuration.Localization,System.IO.MemoryStream@)">
            <summary>
            Gets the cached local file for a given URL path.
            </summary>
            <param name="urlPath">The URL path.</param>
            <param name="localization">The Localization.</param>
            <returns>The path to the local file.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.BinaryFileManager.GetCachedFile(System.Int32,Sdl.Web.Common.Configuration.Localization,System.IO.MemoryStream@)">
            <summary>
            Gets the cached local file for a given binary Id.
            </summary>
            <param name="binaryId">The binary Id.</param>
            <param name="localization">The Localization.</param>
            <returns>The path to the local file.</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.BinaryFileManager.WriteBinaryToFile(System.Byte[],System.String,Sdl.Web.Tridion.Statics.BinaryFileManager.Dimensions,System.IO.MemoryStream@)">
            <summary>
            Perform actual write of binary content to file
            </summary>
            <param name="binary">The binary to store</param>
            <param name="physicalPath">String the file path to write to</param>
            <param name="dimensions">Dimensions of file</param>
            <returns>True is binary was written to disk, false otherwise</returns>
        </member>
        <member name="T:Sdl.Web.Tridion.Statics.NamedLocker">
            <summary>
            NamedLocker using ConcurrentDictionary.
            Based on http://johnculviner.com/achieving-named-lock-locker-functionality-in-c-4-0/
            </summary>
            <remarks>
            This works fine for multiple threads, but it doesn't work for multiple processes.
            </remarks>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.NamedLocker.GetLock(System.String)">
            <summary>
            Get a lock for use with a lock(){} block.
            </summary>
            <param name="name">Name of the lock</param>
            <returns>The lock object</returns>
        </member>
        <member name="M:Sdl.Web.Tridion.Statics.NamedLocker.RemoveLock(System.String)">
            <summary>
            Remove an old lock object that is no longer needed.
            </summary>
            <param name="name">Name of the lock</param>
        </member>
    </members>
</doc>
